---
import BaseLayout from '@/layouts/BaseLayout.astro';
---

<BaseLayout>
  <div class="space-y-8 w-full">
    <!-- Header -->
    <div class="text-center space-y-4">
      <h1 class="text-4xl sm:text-5xl font-bold text-gray-800 dark:text-white">
        API Test
      </h1>
      <p class="text-xl text-gray-600 dark:text-gray-300 max-w-2xl mx-auto">
        Teste die API-Endpunkte und siehe die Ergebnisse
      </p>
    </div>

    <!-- API Test Buttons -->
    <div class="grid gap-6 md:grid-cols-2 lg:grid-cols-3">
      <!-- Hello API -->
      <div class="bg-white dark:bg-gray-800 p-6 rounded-2xl shadow-lg border border-gray-200 dark:border-gray-700">
        <h3 class="text-xl font-bold text-gray-800 dark:text-white mb-4">Hello API</h3>
        <p class="text-gray-600 dark:text-gray-300 mb-4">Teste den einfachen Hello-Endpunkt</p>
        <button 
          id="hello-btn"
          class="px-4 py-2 bg-cyan-500 text-white rounded-lg hover:bg-cyan-600 transition-colors"
        >
          GET /api/hello
        </button>
        <div id="hello-result" class="mt-4 p-4 bg-gray-100 dark:bg-gray-700 rounded-lg hidden">
          <pre class="text-sm text-gray-800 dark:text-gray-200 overflow-x-auto whitespace-pre-wrap"></pre>
        </div>
      </div>

      <!-- Users API -->
      <div class="bg-white dark:bg-gray-800 p-6 rounded-2xl shadow-lg border border-gray-200 dark:border-gray-700">
        <h3 class="text-xl font-bold text-gray-800 dark:text-white mb-4">Users API</h3>
        <p class="text-gray-600 dark:text-gray-300 mb-4">Teste die Benutzer-API</p>
        <div class="space-y-2">
          <button 
            id="users-btn"
            class="px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors mr-2"
          >
            GET /api/users
          </button>
          <button 
            id="user-btn"
            class="px-4 py-2 bg-green-500 text-white rounded-lg hover:bg-green-600 transition-colors"
          >
            GET /api/users?id=1
          </button>
        </div>
        <div id="users-result" class="mt-4 p-4 bg-gray-100 dark:bg-gray-700 rounded-lg hidden">
          <pre class="text-sm text-gray-800 dark:text-gray-200 overflow-x-auto whitespace-pre-wrap"></pre>
        </div>
      </div>
    </div>

    <!-- POST Test -->
    <div class="bg-white dark:bg-gray-800 p-6 rounded-2xl shadow-lg border border-gray-200 dark:border-gray-700">
      <h3 class="text-xl font-bold text-gray-800 dark:text-white mb-4">POST Test</h3>
      <p class="text-gray-600 dark:text-gray-300 mb-4">Sende Daten an die API</p>
      
      <form id="post-form" class="space-y-4">
        <div>
          <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
            Name
          </label>
          <input 
            type="text" 
            id="name-input"
            class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white"
            placeholder="Dein Name"
            required
          >
        </div>
        
        <div>
          <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
            Email
          </label>
          <input 
            type="email" 
            id="email-input"
            class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white"
            placeholder="deine@email.com"
            required
          >
        </div>
        
        <button 
          type="submit"
          class="px-6 py-2 bg-purple-500 text-white rounded-lg hover:bg-purple-600 transition-colors"
        >
          POST /api/users
        </button>
      </form>
      
      <div id="post-result" class="mt-4 p-4 bg-gray-100 dark:bg-gray-700 rounded-lg hidden">
        <pre class="text-sm text-gray-800 dark:text-gray-200 overflow-x-auto whitespace-pre-wrap"></pre>
      </div>
    </div>
  </div>
</BaseLayout>

<script>
  // Hello API Test
  document.getElementById('hello-btn')?.addEventListener('click', async () => {
    const resultDiv = document.getElementById('hello-result');
    const pre = resultDiv?.querySelector('pre');
    
    try {
      const response = await fetch('/api/hello');
      const data = await response.json();
      
      if (resultDiv && pre) {
        pre.textContent = JSON.stringify(data, null, 2);
        resultDiv.classList.remove('hidden');
      }
    } catch (error) {
      if (resultDiv && pre) {
        pre.textContent = `Error: ${error}`;
        resultDiv.classList.remove('hidden');
      }
    }
  });

  // Users API Test
  document.getElementById('users-btn')?.addEventListener('click', async () => {
    const resultDiv = document.getElementById('users-result');
    const pre = resultDiv?.querySelector('pre');
    
    try {
      const response = await fetch('/api/users');
      const data = await response.json();
      
      if (resultDiv && pre) {
        pre.textContent = JSON.stringify(data, null, 2);
        resultDiv.classList.remove('hidden');
      }
    } catch (error) {
      if (resultDiv && pre) {
        pre.textContent = `Error: ${error}`;
        resultDiv.classList.remove('hidden');
      }
    }
  });

  // Single User API Test
  document.getElementById('user-btn')?.addEventListener('click', async () => {
    const resultDiv = document.getElementById('users-result');
    const pre = resultDiv?.querySelector('pre');
    
    try {
      const response = await fetch('/api/users?id=1');
      const data = await response.json();
      
      if (resultDiv && pre) {
        pre.textContent = JSON.stringify(data, null, 2);
        resultDiv.classList.remove('hidden');
      }
    } catch (error) {
      if (resultDiv && pre) {
        pre.textContent = `Error: ${error}`;
        resultDiv.classList.remove('hidden');
      }
    }
  });

  // POST Form Test
  document.getElementById('post-form')?.addEventListener('submit', async (e) => {
    e.preventDefault();
    
    const resultDiv = document.getElementById('post-result');
    const pre = resultDiv?.querySelector('pre');
    const nameInput = document.getElementById('name-input') as HTMLInputElement;
    const emailInput = document.getElementById('email-input') as HTMLInputElement;
    
    try {
      const response = await fetch('/api/users', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          name: nameInput.value,
          email: emailInput.value,
        }),
      });
      
      const data = await response.json();
      
      if (resultDiv && pre) {
        pre.textContent = JSON.stringify(data, null, 2);
        resultDiv.classList.remove('hidden');
      }
      
      // Reset form
      nameInput.value = '';
      emailInput.value = '';
    } catch (error) {
      if (resultDiv && pre) {
        pre.textContent = `Error: ${error}`;
        resultDiv.classList.remove('hidden');
      }
    }
  });
</script> 